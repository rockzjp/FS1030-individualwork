{"ast":null,"code":"var _jsxFileName = \"/Users/jianpingzuo/Desktop/xifanfs1030/\\u4EE3\\u7801/src/components/BlogAdminAdd/BlogAdminAddForm.js\";\nimport React from 'react';\nimport './Styles.scss';\nimport { Formik, useField, Form } from 'formik';\nimport * as Yup from 'yup';\nimport $ from 'jquery';\n\nconst CustomTextInput = ({\n  label,\n  ...props\n}) => {\n  const [field, meta] = useField(props);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: props.id || props.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  }, label), /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    className: \"text-input\"\n  }, field, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }\n  })), meta.touched && meta.error ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 15\n    }\n  }, meta.error) : null);\n};\n\nfunction BlogAdminAddForm() {\n  return /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      title: '',\n      content: ''\n    },\n    validationSchema: Yup.object({\n      title: Yup.string().required('Required'),\n      content: Yup.string().required('Required')\n    }),\n    onSubmit: (values, {\n      setSubmitting,\n      resetForm\n    }) => {\n      $.ajax({\n        type: \"post\",\n        url: \"http://localhost:3600/portfolio/update\",\n        dataType: \"json\",\n        contentType: \"application/json\",\n        data: JSON.stringify({\n          type: \"insert\",\n          \"info\": values\n        }),\n        success: function (res) {\n          if (res.returnCode === 0) {\n            alert('Success');\n          } else {\n            alert(res.reutrnMsg);\n          }\n\n          resetForm();\n          setSubmitting(false);\n        },\n        error: function (err) {\n          alert(err);\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, props => /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, \"New article\"), /*#__PURE__*/React.createElement(CustomTextInput, {\n    label: \"title\",\n    name: \"title\",\n    type: \"text\",\n    placeholder: \"Enter title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CustomTextInput, {\n    label: \"content\",\n    name: \"content\",\n    placeholder: \"Please enter content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, props.isSubmitting ? 'Loading' : 'Submit')));\n}\n\nexport default BlogAdminAddForm;","map":{"version":3,"sources":["/Users/jianpingzuo/Desktop/xifanfs1030/代码/src/components/BlogAdminAdd/BlogAdminAddForm.js"],"names":["React","Formik","useField","Form","Yup","$","CustomTextInput","label","props","field","meta","id","name","touched","error","BlogAdminAddForm","title","content","object","string","required","values","setSubmitting","resetForm","ajax","type","url","dataType","contentType","data","JSON","stringify","success","res","returnCode","alert","reutrnMsg","err","isSubmitting"],"mappings":"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","sourcesContent":["import React from 'react';\nimport  './Styles.scss';\nimport { Formik, useField, Form } from 'formik';\nimport * as Yup from 'yup';\nimport $ from 'jquery';\n\nconst CustomTextInput = ({label, ...props}) =>{\n      const [field, meta] = useField(props);\n      return (\n        <>\n            <label htmlFor={props.id || props.name}>{label}</label>\n            <input className=\"text-input\" {...field} {...props} />\n            {meta.touched && meta.error ? (\n              <div className=\"error\">{meta.error}</div>\n            ) : null}\n\n          </>\n      )\n}\n\n \n\n\nfunction BlogAdminAddForm() {\n  return (\n   \n    <Formik\n        initialValues={{\n          title: '',\n          content: ''\n        }}\n\n        validationSchema={Yup.object({\n           title: Yup.string()\n            .required('Required'),\n\n            content: Yup.string()\n            .required('Required'),\n             \n        })}\n\n        onSubmit={(values, {setSubmitting,resetForm}) => {\n           \n            $.ajax({\n              type: \"post\",\n              url: \"http://localhost:3600/portfolio/update\" ,\n              dataType : \"json\",\n              contentType : \"application/json\", \n              data: JSON.stringify({type:\"insert\",\"info\":values}),\n              success: function (res) {\n                if(res.returnCode === 0)\n                {\n                    alert('Success');\n                }\n                else\n                {\n                    alert(res.reutrnMsg)\n                }\n \n                resetForm();\n                setSubmitting(false);\n\n              },\n              error:function(err)\n              {\n                alert(err);\n              }\n            })\n  \n        }}\n    \n    \n    >\n    \n\n    {props => (\n      <Form>\n        <h1>New article</h1>\n        <CustomTextInput label=\"title\" name=\"title\" type=\"text\" placeholder=\"Enter title\" />\n        <CustomTextInput label=\"content\" name=\"content\" placeholder=\"Please enter content\" />\n        <button type=\"submit\">{props.isSubmitting ? 'Loading' : 'Submit'}</button>\n      </Form>\n\n    )}\n    </Formik>\n   \n  );\n}\n\nexport default BlogAdminAddForm;\n"]},"metadata":{},"sourceType":"module"}